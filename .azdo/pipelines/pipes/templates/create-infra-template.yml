# ----------------------------------------------------------------------------------------------------
# Template to deploy Azure Resources for one environment
# ----------------------------------------------------------------------------------------------------
parameters:
- name: environmentName
  default: 'DEV'
- name: templateFolderName
  default: 'infra/Bicep'
- name: templateFileName
  default: 'main.bicep'
- name: parameterFileName
  default: 'main.bicepparam' # 'main.parameters.json'
- name: deploymentMode
  default: 'Incremental'  # 'Incremental' | 'Complete' | 'Validation'

# ----------------------------------------------------------------------------------------------------
jobs:
- deployment: CreateInfra
  displayName: Initialize Create Infra
  environment: ${{ parameters.environmentName }}

- job: CreateInfraJob
  displayName: Create Infrastructure
  variables:
    - group: SQLDeployDemo
    - template: ../../vars/var-common.yml
    - name: environmentName
      value: ${{ parameters.environmentName }}
    - name: environmentNameUpper
      value: ${{ upper(parameters.environmentName) }}
    - name: environmentNameLower
      value: ${{ lower(parameters.environmentName) }}
    - name: templateFile
      value: '$(Pipeline.Workspace)\s\${{ parameters.templateFolderName }}\${{ parameters.templateFileName }}'
    - name: parameterFile
      value: '$(Pipeline.Workspace)\s\${{ parameters.templateFolderName }}\${{ parameters.parameterFileName }}'
    - name: dacpacDirectoryVar
      value: '$(dacpacDirectory)'
    - name: dacpacFileNameVar
      value: '$(dacpacFileName)'

  steps:
  - bash: |
      resourceGroupName=$(echo "$(resourceGroupPrefix)_$(environmentNameLower)" | tr '[:upper:]' '[:lower:]')
      echo "resourceGroupName=$resourceGroupName"
      echo "##vso[task.setvariable variable=resourceGroupName]$resourceGroupName"
      
      runDateTime=$(echo $(date '+%Y%m%d-%H%M%S'))
      echo "##vso[task.setvariable variable=runDateTime]$runDateTime"
      echo "runDateTime=$runDateTime"
                                   
      runDateTimeZ=$(echo $(date '+%Y%m%dT%H%M%SZ'))
      echo "##vso[task.setvariable variable=runDateTimeZ]$runDateTimeZ"
      echo "runDateTimeZ=$runDateTimeZ"
    displayName: 'Create Variables'
    continueOnError: true

  - bash: |
      echo "environmentName=${{ parameters.environmentName }}"
      echo "templateFolderName=${{ parameters.templateFolderName }}"
      echo "templateFileName=${{ parameters.templateFileName }}"
      echo "deploymentMode=${{ parameters.deploymentMode }}"
      echo "parameterFileName=${{ parameters.parameterFileName }}"

      echo "templateFile= $(templateFile)"
      echo "parameterFile= $(parameterFile)"

      echo "##[group]Display All Environment Variables:"
      printenv | sort
      echo "##[endgroup]"
    displayName: 'Display Variables'
    continueOnError: true

  - task: CmdLine@2
    inputs:
      script: |
        echo "Directory of Default Working Directory:"
        tree $(System.DefaultWorkingDirectory)
        dir $(System.DefaultWorkingDirectory) /s
    displayName: 'Display Files'
    continueOnError: true

  - task: qetza.replacetokens.replacetokens-task.replacetokens@6
    displayName: 'Create Parameter File'
    inputs:
      sources: $(parameterFile)
      tokenPrefix: '#{'
      tokenSuffix: '}#'

  - task: CmdLine@2
    displayName: Display Parameter File Contents
    continueOnError: true
    inputs:
      script: |
        echo "Bicep File Name: $(templateFile)"
        echo "##[group]Contents of Parameter File  $(parameterFile)"
        cat  $(parameterFile)
        echo "##[endgroup]"

  - task: AzureCLI@2
    displayName: 'Create Resource Group'
    inputs:
      azureSubscription: $(serviceConnectionName)
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: az group create --name $(resourceGroupName) --location $(location) --tags LastDeployed=$(runDateTime) Environment=$(environmentNameUpper)

  - task: AzureResourceManagerTemplateDeployment@3
    displayName: 'Publish Bicep Resources'
    inputs:
      csmFile: $(templateFile)
      csmParametersFile: $(parameterFile)
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: $(serviceConnectionName)
      action: 'Create Or Update Resource Group'
      resourceGroupName: '$(resourceGroupName)'
      location: '$(location)'
      templateLocation: 'Linked artifact'
      deploymentMode: '${{ parameters.deploymentMode }}'  # 'Incremental' | 'Complete' | 'Validation'

  - task: CmdLine@2
    displayName: 'Wipe Parameter File'
    condition: always()
    continueOnError: true
    inputs:
      script: |
        echo "WIPED!" > $(parameterFile)
